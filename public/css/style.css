/* styles */
/* called by your view template */

/* You might want to try something fancier: */
/* less: http://lesscss.org/ */

* {
  box-sizing: border-box;
}

:root {
  --focus-color: hotpink;
  --focus-outline: 2px solid var(--focus-color);
  --focus-box-shadow: 0 0 0 2px var(--focus-color);

  --invalid-color: #da2727;
  --invalid-focus-outline: 2px solid var(--invalid-color);
}

html,
body {
  width: 100%;
  height: 100%;
}

body {
  position: relative;
  font-family: helvetica, arial, sans-serif;
  background-color: var(--background-color);
  background-image: var(--background-image);
  background-repeat: var(--background-repeat);
}

:focus {
  outline: var(--focus-outline);
}

.invalid :focus {
  outline: var(--invalid-focus-outline);
}

.bold {
  font-weight: bold;
}

p {
  max-width: 600px;
}

form {
  background-color: papayawhip;
  padding: 15px;
  display: inline-block;
  width: 100%;
  border-radius: 3px;
}

form:not(:last-child) {
  margin-bottom: 25px;
}

input,
textarea {
  display: block;
  margin-bottom: 10px;
  padding: 5px;
  width: 100%;
  border: 1px solid lightgrey;
  border-radius: 3px;
  font-size: 14px;
}

textarea {
  resize: vertical;
}

select {
  border-radius: 3px;
}

li {
  margin-bottom: 5px;
}

footer {
  margin-top: 50px;
  padding-top: 25px;
  border-top: 1px solid lightgrey;
}

footer > a {
  color: #bbbbbb;
}

.nicejob {
  text-decoration: line-through;
}

.card {
  --card-border-radius: 6px;
  --card-border-width: 2px;

  width: var(--card-tile-width);
  position: relative;
  padding: 15px;
  border: var(--card-border-width) solid #222;
  border-radius: var(--card-border-radius);
  box-shadow: 0 0 15px rgba(0, 0, 0, 0.2);
  background-color: white;
}

.card--is-being-dragged:hover {
  cursor: move;
  user-select: none;
}

.card:not(.card--is-being-edited):not(.settings) {
  cursor: grab;
}

.card--is-being-edited {
  width: auto !important;
  min-width: var(--card-tile-width);
  z-index: 1;
}

.card:focus {
  outline: none;
}

.card:focus::before {
  --focus-offset: calc(-2 * var(--card-border-width));

  content: "";
  position: absolute;
  top: var(--focus-offset);
  left: var(--focus-offset);
  right: var(--focus-offset);
  bottom: var(--focus-offset);
  border: var(--card-border-width) dotted var(--background-color);
  border-radius: var(--card-border-radius);
  filter: invert(100%);
  pointer-events: none;
}

.card:not(:last-child) {
  margin-bottom: 15px;
}

@media (min-width: 768px) {
  .card {
    position: absolute;
    margin-bottom: initial;
  }
}

/*******************************************************************************************/
/* this below is Suz code please forgive or improve */

html,
body,
main,
#app {
  margin: 0;
}

.card h2 {
  padding: 0;
  margin: 0 0 15px 0;
  font-size: 20px;
  font-family: "Chivo", sans-serif;
  word-wrap: break-word;
}

.card h3 {
  font-family: "Chivo", sans-serif;
  font-size: 18px;
}

.card .number {
  font-size: 64px;
  font-weight: bold;
  text-align: center;
  padding: 0;
  margin: 0;
  font-family: "Chivo", sans-serif;
}

button {
  -webkit-appearance: none;
  appearance: none;
  padding: 0;
  border: none;
  color: currentColor;
  background-color: #fff;
  font: inherit;
}

/*
Remove very strange and unnecessary focus outline in Firefox.
Firefox, why are you like this?
*/
button::-moz-focus-inner,
input[type="button"]::-moz-focus-inner,
input[type="submit"]::-moz-focus-inner {
  padding: 0;
  border-style: none;
}

.inline-button {
  padding: 5px;
  border: 1px solid #fff;
  border-radius: 3px;
  font-size: 10px;
}

/*
1. Stops following elements from covering the focus outline.
*/
.inline-button:focus {
  outline: none;
  box-shadow: 0 0 0 1px goldenrod;
  transform: rotate(0); /* 1. */
}

.inline-button:hover {
  border-color: currentColor;
}

.edit-button {
  color: #00f;
}

.delete-button {
  color: #da2727;
  font-weight: bold;
}

.action-button {
  --c-button-bg: hsl(214, 45%, 47%);
  --c-button-bg-dark-1: hsl(214, 45%, 40%);
  --c-button-bg-dark-2: hsl(214, 45%, 30%);

  --base-box-shadow: 1px 0 var(--c-button-bg-dark-2),
    0 1px var(--c-button-bg-dark-1), 2px 1px var(--c-button-bg-dark-2),
    1px 2px var(--c-button-bg-dark-1), 3px 2px var(--c-button-bg-dark-2),
    2px 3px var(--c-button-bg-dark-1), 4px 3px var(--c-button-bg-dark-2),
    3px 4px var(--c-button-bg-dark-1);

  --ext-box-shadow: var(--base-box-shadow), 5px 4px var(--c-button-bg-dark-2),
    4px 5px var(--c-button-bg-dark-1), 6px 5px var(--c-button-bg-dark-2),
    5px 6px var(--c-button-bg-dark-1);

  font-family: "Chivo", sans-serif;
  border: none;
  background-color: var(--c-button-bg);
  color: white;
  padding: 8px 14px;
  font-weight: normal;
  font-size: 18px;
  text-decoration: none;
  display: inline-block;
  outline: none;
  border-radius: 3px;
  cursor: pointer;
  /* needed for anchors */
  position: relative;
  box-shadow: var(--ext-box-shadow);
  width: calc(100% - 6px);
}

.action-button--secondary {
  --c-button-bg: hsl(214, 0%, 47%);
  --c-button-bg-dark-1: hsl(214, 0%, 40%);
  --c-button-bg-dark-2: hsl(214, 0%, 30%);
}

.action-button:hover {
  transform: translate(2px, 2px);
  box-shadow: var(--base-box-shadow);
}

.action-button:focus {
  box-shadow: 0 0 0 2px #333, var(--ext-box-shadow);
}

.action-button:active {
  transform: translate(4px, 4px);
  box-shadow: none;
}

.card .controls {
  position: relative;
  margin-top: -12px;
  margin-right: -10px;
  float: right;
  display: flex;
}

.card p.status {
  position: relative;
  margin-top: 20px;
  font-size: 12px;
}

.card p.status:empty {
  margin-top: 0;
  margin-bottom: 0;
}

p.error {
  color: #da2727;
}

p.success {
  color: #048401;
}

input {
  display: block;
  margin-bottom: 10px;
  padding: 2px;
  width: 100%;
  border: 1px solid lightgrey;
  border-radius: 3px;
  font-size: 13px;
}

label {
  font-size: 13px;
  display: block;
  margin-bottom: 10px;
}

select {
  display: block;
  font-size: 13px;
  margin-bottom: 10px;
  height: 20px;
}



.simulation-status {
  font-family: "Chivo", sans-serif;
  font-size: 0.875rem;
  position: absolute;
  top: 5px;
  right: 10px;
}

/* -------------- */
/* Helper classes */
/* -------------- */

.screen-reader-only {
  border: 0;
  clip: rect(0 0 0 0);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  width: 1px;
}

/*
a11y-dialog styling layer
http://edenspiekermann.github.io/a11y-dialog/#styling-layer
*/

.modal-wrapper {
  position: fixed;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  display: flex;
  justify-content: center;
  align-items: center;
  pointer-events: none;
}

.modal {
  pointer-events: all;
}

.modal__title {
  font-family: inherit;
  font-size: inherit;
}

.modal__close-button {
  position: absolute;
  top: 5px;
  right: 5px;
  font-size: 10px;
  font-weight: bold;
}

dialog {
  position: relative;
  padding: 15px;
  border: 2px solid #222;
  border-radius: 6px;
}

/**
 * When the native `<dialog>` element is supported, the overlay is implied and
 * can be styled with `::backdrop`, which means the DOM one should be removed.
 *
 * The `data-a11y-dialog-native` attribute is set by the script when the
 * `<dialog>` element is properly supported.
 *
 * Feel free to replace `:first-child` with the overlay selector you prefer.
 */
[data-a11y-dialog-native] > :first-child {
  display: none;
}

/**
 * When the `<dialog>` element is not supported, its default display is `inline`
 * which can cause layout issues. This makes sure the dialog is correctly
 * displayed when open.
 */
dialog[open] {
  display: block;
}

/**
 * When the native `<dialog>` element is not supported, the script toggles the
 * `aria-hidden` attribute on the container. If `aria-hidden` is set to `true`,
 * the container should be hidden entirely.
 *
 * Feel free to replace `.dialog-container` with the container selector you
 * prefer.
 */
.dialog-container[aria-hidden="true"] {
  display: none;
}

.vc-compact {
  margin-bottom: 10px;
  box-sizing: content-box;
  box-shadow: none;
}

/**
 * Stops content from being selected (e.g. when moving around cards).
 */
body.dragging {
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

/*
Utility: sr-only

Source: https://github.com/h5bp/html5-boilerplate

Hide only visually, but have it available for screen readers:
https://snook.ca/archives/html_and_css/hiding-content-for-accessibility

1. For long content, line feeds are not interpreted as spaces
   and small width causes content to wrap 1 word per line:
   https://medium.com/@jessebeach/beware-smushed-off-screen-accessible-text-5952a4c2cbfe
*/
.sr-only {
  position: absolute;
  overflow: hidden;
  clip: rect(0 0 0 0);
  width: 1px;
  height: 1px;
  margin: -1px;
  padding: 0;
  border: 0;
  white-space: nowrap; /* 1. */
}

/*
Applies an emoji font stack to render emojis like ✏ or ⚡ as a colorful emoji.
*/
.emoji-font {
  font-family: apple color emoji, segoe ui emoji, noto color emoji,
    android emoji, emojisymbols, emojione mozilla, twemoji mozilla,
    segoe ui symbol;
}
