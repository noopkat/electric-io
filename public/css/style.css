/* ---- */
/* Base */
/* ---- */

*,
*::before,
*::after {
  box-sizing: border-box;
}

:root {
  --focus-color: hotpink;
  --focus-outline: 2px solid var(--focus-color);
  --focus-box-shadow: 0 0 0 2px var(--focus-color);

  --invalid-color: #da2727;

  --border-color: lightgrey;
  --border-radius: 3px;
}

html,
body {
  width: 100%;
  height: 100%;
}

body {
  margin: 0;
  position: relative;
  font-size: 1em;
  font-family: Lato, Numero, sans-serif;
  background-color: var(--background-color, #fff);
  background-image: var(--background-image, none);
  background-repeat: var(--background-repeat, repeat);
}

/*
1. Ensures focus styles are rendered on top of other elements.
*/
:focus {
  outline: var(--focus-outline);
  isolation: isolate; /* 1. */
}

h1,
h2,
h3,
h4,
h5,
h6 {
  margin-top: 0;
  font-family: "Chivo", sans-serif;
}

h2 {
  font-size: 1.25em;
}

h3 {
  font-size: 1.125em;
}

form {
  background-color: papayawhip;
  padding: 15px;
  display: inline-block;
  width: 100%;
  border-radius: var(--border-radius);
}

form:not(:last-child) {
  margin-bottom: 25px;
}

label {
  display: block;
  margin-bottom: 10px;
  font-size: 0.875em;
}

input[type="text"] {
  display: block;
  width: 100%;
  margin: 0;
  margin-bottom: 10px;
  padding: 0.5em 0.25em;
  border: 1px solid var(--border-color);
  border-radius: var(--border-radius);
  font: inherit;
  line-height: 1;
}

select {
  -webkit-appearance: none;
  appearance: none;

  display: block;
  width: 100%;
  margin: 0;
  margin-bottom: 10px;
  padding: 0.5em 0.8em 0.5em 0.25em;
  border: 1px solid var(--border-color);
  border-radius: var(--border-radius);
  background-color: #fff;
  background-image: url("data:image/svg+xml;charset=US-ASCII,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20width%3D%22292.4%22%20height%3D%22292.4%22%3E%3Cpath%20fill%3D%22%23currentColor%22%20d%3D%22M287%2069.4a17.6%2017.6%200%200%200-13-5.4H18.4c-5%200-9.3%201.8-12.9%205.4A17.6%2017.6%200%200%200%200%2082.2c0%205%201.8%209.3%205.4%2012.9l128%20127.9c3.6%203.6%207.8%205.4%2012.8%205.4s9.2-1.8%2012.8-5.4L287%2095c3.5-3.5%205.4-7.8%205.4-12.8%200-5-1.9-9.2-5.5-12.8z%22%2F%3E%3C%2Fsvg%3E");
  background-repeat: no-repeat, repeat;
  background-position: right 0.55em top 50%, 0 0;
  background-size: 0.7em auto, 100%;
  font: inherit;
  line-height: 1;
  min-width: 5em;
}

textarea {
  display: block;
  width: 100%;
  margin: 0;
  margin-bottom: 10px;
  padding: 0.5em 0.25em;
  border: 1px solid var(--border-color);
  border-radius: var(--border-radius);
  font: inherit;
  line-height: 1;
  resize: vertical;
}

button {
  -webkit-appearance: none;
  appearance: none;

  padding: 0;
  border: 1px solid transparent;
  border-radius: var(--border-radius);
  color: currentColor;
  background-color: #fff;
  font: inherit;
}

button:not(:disabled):hover {
  cursor: pointer;
}

/*
Remove very strange and unnecessary focus outline in Firefox.
Firefox, why are you like this?
*/
button::-moz-focus-inner {
  padding: 0;
  border-style: none;
}

/* ------------- */
/* Form controls */
/* ------------- */

.thick-button {
  --c-button-bg: hsl(214, 45%, 47%);
  --c-button-bg-dark-1: hsl(214, 45%, 40%);
  --c-button-bg-dark-2: hsl(214, 45%, 30%);

  --base-box-shadow: 1px 0 var(--c-button-bg-dark-2),
    0 1px var(--c-button-bg-dark-1), 2px 1px var(--c-button-bg-dark-2),
    1px 2px var(--c-button-bg-dark-1), 3px 2px var(--c-button-bg-dark-2),
    2px 3px var(--c-button-bg-dark-1), 4px 3px var(--c-button-bg-dark-2),
    3px 4px var(--c-button-bg-dark-1);

  --ext-box-shadow: var(--base-box-shadow), 5px 4px var(--c-button-bg-dark-2),
    4px 5px var(--c-button-bg-dark-1), 6px 5px var(--c-button-bg-dark-2),
    5px 6px var(--c-button-bg-dark-1);

  display: inline-block;
  padding: 8px 14px;
  outline: none;
  color: #fff;
  background-color: var(--c-button-bg);

  /* needed for anchors */
  position: relative;
  box-shadow: var(--ext-box-shadow);
  width: calc(100% - 6px);
}

.thick-button:not(:disabled):hover {
  transform: translate(2px, 2px);
  box-shadow: var(--base-box-shadow);
}

.thick-button:not(:disabled):focus {
  box-shadow: 0 0 0 2px #333, var(--ext-box-shadow);
}

.thick-button:not(:disabled):active {
  transform: translate(4px, 4px);
  box-shadow: none;
}

.thick-button + .thick-button {
  margin-top: 10px;
}

.thick-button--secondary {
  --c-button-bg: hsl(214, 0%, 47%);
  --c-button-bg-dark-1: hsl(214, 0%, 40%);
  --c-button-bg-dark-2: hsl(214, 0%, 30%);
}

.icon-button {
  width: 28px;
  height: 28px;
  display: inline-flex;
  justify-content: center;
  align-items: center;
}

.icon-button:not(:disabled):hover {
  border-color: currentColor;
}

/* -------------- */
/* Helper classes */
/* -------------- */

/*
Utility: is-being-dragged

Stops content from being selected (e.g. when moving around cards).
*/
.is-being-dragged {
  -webkit-user-select: none;
  user-select: none;
}

/*
Utility: sr-only

Source: https://github.com/h5bp/html5-boilerplate

Hide only visually, but have it available for screen readers:
https://snook.ca/archives/html_and_css/hiding-content-for-accessibility

1. For long content, line feeds are not interpreted as spaces
   and small width causes content to wrap 1 word per line:
   https://medium.com/@jessebeach/beware-smushed-off-screen-accessible-text-5952a4c2cbfe
*/
.sr-only {
  position: absolute;
  overflow: hidden;
  clip: rect(0 0 0 0);
  width: 1px;
  height: 1px;
  margin: -1px;
  padding: 0;
  border: 0;
  white-space: nowrap; /* 1. */
}

/*
Utility: emoji-font

Applies an emoji font stack to render emojis like ✏ or ⚡ as a colorful emoji.
*/
.emoji-font {
  font-family: apple color emoji, segoe ui emoji, noto color emoji,
    android emoji, emojisymbols, emojione mozilla, twemoji mozilla,
    segoe ui symbol;
}

/*
a11y-dialog styling layer
http://edenspiekermann.github.io/a11y-dialog/#styling-layer
*/

.modal-wrapper {
  position: fixed;
  z-index: 3000;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  display: flex;
  justify-content: center;
  align-items: center;
  pointer-events: none;
}

.modal {
  pointer-events: all;
}

.modal__title {
  font-family: inherit;
  font-size: inherit;
}

.modal__close-button {
  position: absolute;
  top: 5px;
  right: 5px;
}

dialog {
  position: relative;
  padding: 15px;
  border: 2px solid #222;
  border-radius: 6px;
}

/**
 * When the native `<dialog>` element is supported, the overlay is implied and
 * can be styled with `::backdrop`, which means the DOM one should be removed.
 *
 * The `data-a11y-dialog-native` attribute is set by the script when the
 * `<dialog>` element is properly supported.
 *
 * Feel free to replace `:first-child` with the overlay selector you prefer.
 */
[data-a11y-dialog-native] > :first-child {
  display: none;
}

/**
 * When the `<dialog>` element is not supported, its default display is `inline`
 * which can cause layout issues. This makes sure the dialog is correctly
 * displayed when open.
 */
dialog[open] {
  display: block;
}

/**
 * When the native `<dialog>` element is not supported, the script toggles the
 * `aria-hidden` attribute on the container. If `aria-hidden` is set to `true`,
 * the container should be hidden entirely.
 *
 * Feel free to replace `.dialog-container` with the container selector you
 * prefer.
 */
.dialog-container[aria-hidden="true"] {
  display: none;
}

.vc-compact {
  margin-bottom: 10px;
  box-sizing: content-box;
  box-shadow: none;
}
